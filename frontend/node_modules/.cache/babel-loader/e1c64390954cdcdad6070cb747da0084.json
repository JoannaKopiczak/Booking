{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ThinkPad\\\\Desktop\\\\pwo\\\\booking1\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ThinkPad\\\\Desktop\\\\pwo\\\\booking1\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\";\nimport { GET_SPECTACLES_SUCCESS, GET_SPECTACLES_ERROR } from \"./actionTypes\";\nexport var getSpectacles = function getSpectacles() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Axios.get(\"/api/spectacles\");\n\n            case 3:\n              result = _context.sent;\n              dispatch({\n                type: GET_SPECTACLES_SUCCESS,\n                payload: result.data.spectacles\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: GET_SPECTACLES_ERROR,\n                error: _context.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var addSpectacle = function addSpectacle(spectacle) {\n  var contentType = {\n    headers: {\n      \"content-type\": \"multipart/form-data\"\n    }\n  };\n  var formData = new FormData();\n  formData.append(\"title\", spectacle.title); //formData.append(\"numberInStock\", spectacle.numberInStock);\n\n  formData.append(\"genre\", spectacle.genre);\n  formData.append(\"image\", spectacle.image);\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return Axios.post(\"/api/spectacles/addspectacle\", formData, contentType);\n\n            case 3:\n              result = _context2.sent;\n              dispatch({\n                type: GET_SPECTACLES_SUCCESS,\n                payload: result.data.spectacles\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: GET_SPECTACLES_ERROR,\n                error: _context2.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/ThinkPad/Desktop/pwo/booking1/frontend/src/actions/spectaclesAction.js"],"names":["Axios","GET_SPECTACLES_SUCCESS","GET_SPECTACLES_ERROR","getSpectacles","dispatch","get","result","type","payload","data","spectacles","error","addSpectacle","spectacle","contentType","headers","formData","FormData","append","title","genre","image","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,EAAiCC,oBAAjC,QAA6D,eAA7D;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEkBJ,KAAK,CAACK,GAAN,CAAU,iBAAV,CAFlB;;AAAA;AAEGC,cAAAA,MAFH;AAGHF,cAAAA,QAAQ,CAAC;AAAEG,gBAAAA,IAAI,EAAEN,sBAAR;AAAgCO,gBAAAA,OAAO,EAAEF,MAAM,CAACG,IAAP,CAAYC;AAArD,eAAD,CAAR;AAHG;AAAA;;AAAA;AAAA;AAAA;AAKHN,cAAAA,QAAQ,CAAC;AAAEG,gBAAAA,IAAI,EAAEL,oBAAR;AAA8BS,gBAAAA,KAAK;AAAnC,eAAD,CAAR;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAQD,CATM;AAWP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAe;AACzC,MAAMC,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADS,GAApB;AAKA,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBL,SAAS,CAACM,KAAnC,EAPyC,CAQzC;;AACAH,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBL,SAAS,CAACO,KAAnC;AACAJ,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBL,SAAS,CAACQ,KAAnC;AAEA;AAAA,yEAAO,kBAAOjB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEkBJ,KAAK,CAACsB,IAAN,CACnB,8BADmB,EAEnBN,QAFmB,EAGnBF,WAHmB,CAFlB;;AAAA;AAEGR,cAAAA,MAFH;AAOHF,cAAAA,QAAQ,CAAC;AAAEG,gBAAAA,IAAI,EAAEN,sBAAR;AAAgCO,gBAAAA,OAAO,EAAEF,MAAM,CAACG,IAAP,CAAYC;AAArD,eAAD,CAAR;AAPG;AAAA;;AAAA;AAAA;AAAA;AASHN,cAAAA,QAAQ,CAAC;AAAEG,gBAAAA,IAAI,EAAEL,oBAAR;AAA8BS,gBAAAA,KAAK;AAAnC,eAAD,CAAR;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAYD,CAxBM","sourcesContent":["import Axios from \"axios\";\nimport { GET_SPECTACLES_SUCCESS, GET_SPECTACLES_ERROR } from \"./actionTypes\";\n\nexport const getSpectacles = () => {\n  return async (dispatch) => {\n    try {\n      const result = await Axios.get(\"/api/spectacles\");\n      dispatch({ type: GET_SPECTACLES_SUCCESS, payload: result.data.spectacles });\n    } catch (error) {\n      dispatch({ type: GET_SPECTACLES_ERROR, error });\n    }\n  };\n};\n\nexport const addSpectacle = (spectacle) => {\n  const contentType = {\n    headers: {\n      \"content-type\": \"multipart/form-data\",\n    },\n  };\n  let formData = new FormData();\n  formData.append(\"title\", spectacle.title);\n  //formData.append(\"numberInStock\", spectacle.numberInStock);\n  formData.append(\"genre\", spectacle.genre);\n  formData.append(\"image\", spectacle.image);\n\n  return async (dispatch) => {\n    try {\n      const result = await Axios.post(\n        \"/api/spectacles/addspectacle\",\n        formData,\n        contentType\n      );\n      dispatch({ type: GET_SPECTACLES_SUCCESS, payload: result.data.spectacles });\n    } catch (error) {\n      dispatch({ type: GET_SPECTACLES_ERROR, error });\n    }\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}